{"version":3,"sources":["./src/app/customers/store/customer.actions.ts","./src/app/customers/customers.component.ts","./src/app/customers/customers.component.html","./src/app/vehicles/vehicleitem/vehicleitem.component.ts","./src/app/vehicles/vehicleitem/vehicleitem.component.html","./src/environments/environment.ts","./src/app/vehicles/store/vehicle.effects.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/customers/customerEdit/customerEdit.component.ts","./src/app/customers/customerEdit/customerEdit.component.html","./src/app/vehicles/vehicles.component.ts","./src/app/vehicles/vehicles.component.html","./src/app/app.module.ts","./src/app/app.reducer.ts","./src/app/vehicles/store/vehicle.reducer.ts","./src/app/vehicles/vehicleEdit/vehicleEdit.component.ts","./src/app/vehicles/vehicleEdit/vehicleEdit.component.html","./src/app/customers/customerItem/customerItem.component.ts","./src/app/customers/customerItem/customerItem.component.html","./src/app/rentalEvent/rentalEvent.component.ts","./src/app/rentalEvent/rentalEvent.component.html","./src/app/vehicles/store/vehicle.actions.ts","./src/app/renteddata/renteddata.component.ts","./src/app/renteddata/renteddata.component.html","./src/app/customers/store/customer.effects.ts","./src/app/customers/store/customer.reducer.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Action } from '@ngrx/store';\r\nimport { EditVehicleStart } from 'src/app/vehicles/store/vehicle.actions';\r\nimport { Customer } from '../Customer';\r\n\r\nexport const GET_CUSTOMERS_START = 'GET_CUSTOMERS_START';\r\nexport const GET_CUSTOMERS_SUCCESS = 'GET_CUSTOMERS_SUCCESS';\r\n\r\nexport const CREATE_CUSTOMERS_START = 'CREATE_CUSTOMERS_START';\r\nexport const CREATE_CUSTOMERS_SUCCESS = 'CREATE_CUSTOMERS_SUCCESS';\r\n\r\nexport const EDIT_CUSTOMERS_START = 'EDIT_CUSTOMERS_START';\r\nexport const EDIT_CUSTOMERS_SUCCESS = 'EDIT_CUSTOMERS_SUCCESS';\r\n\r\nexport const DELETE_CUSTOMERS_START = 'DELETE_CUSTOMERS_START';\r\nexport const DELETE_CUSTOMERS_SUCCESS = 'DELETE_CUSTOMERS_SUCCESS';\r\n\r\nexport class GetCustomerStart implements Action {\r\n  readonly type = GET_CUSTOMERS_START;\r\n}\r\n\r\nexport class GetCustomerSuccess implements Action {\r\n  readonly type = GET_CUSTOMERS_SUCCESS;\r\n\r\n  constructor(public payload: Customer[]) {}\r\n}\r\n\r\nexport class CreateCustomerStart implements Action {\r\n  readonly type = CREATE_CUSTOMERS_START;\r\n  constructor(public payload: Customer) {}\r\n}\r\nexport class CreateCustomerSuccess implements Action {\r\n  readonly type = CREATE_CUSTOMERS_SUCCESS;\r\n  constructor(public payload: Customer) {}\r\n}\r\n\r\nexport class EditCustomerStart implements Action {\r\n  readonly type = EDIT_CUSTOMERS_START;\r\n  constructor(public payload: { id: number; customer: Customer }) {}\r\n}\r\nexport class EditCustomerSuccess implements Action {\r\n  readonly type = EDIT_CUSTOMERS_SUCCESS;\r\n  constructor(public payload: Customer) {}\r\n}\r\n\r\nexport class DeleteCustomerStart implements Action {\r\n  readonly type = DELETE_CUSTOMERS_START;\r\n\r\n  constructor(public payload:number){}\r\n}\r\nexport class DeleteCustomerSuccess implements Action {\r\n  readonly type = DELETE_CUSTOMERS_SUCCESS;\r\n}\r\n\r\nexport type CustomersTypes =\r\n  | GetCustomerStart\r\n  | GetCustomerSuccess\r\n  | CreateCustomerStart\r\n  | CreateCustomerSuccess | EditCustomerStart | EditCustomerSuccess | DeleteCustomerStart | DeleteCustomerSuccess;\r\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport * as fromApp from '../app.reducer';\nimport { Customer } from './Customer';\nimport * as fromCustomerActions from './store/customer.actions';\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.scss']\n})\nexport class CustomersComponent implements OnInit {\n  customers:Observable<Customer[]>;\n  isActive:boolean;\n  constructor(private store:Store<fromApp.AppState>) { }\n\n  ngOnInit() {\n    this.store.dispatch(new fromCustomerActions.GetCustomerStart());\n\n    this.customers = this.store.select(fromApp.getCustomers);\n  }\n\n  addCustomer(f:NgForm){\n    this.store.dispatch(new fromCustomerActions.CreateCustomerStart(f.value))\n  }\n\n}\n","<div class=\"customers\">\n  <div class=\"customers_header\">\n    <p>List of customers</p>\n  </div>\n  <div class=\"customers_btns\">\n    <button (click)=\"isActive=!isActive\" class=\"btn btn-sm btn-success\">+ add new</button>\n  </div>\n  <div *ngIf=\"isActive\" class=\"customer_add\"> \n    <form (ngSubmit)=\"addCustomer(f)\" #f=\"ngForm\">\n      <p>Create Form</p>\n       <input class=\"form-control\" type=\"text\" name=\"fullName\" placeholder=\"full name\" ngModel required>\n       <input class=\"form-control\" type=\"text\" name=\"emailAddress\" placeholder=\"email address\" ngModel required>\n       <input class=\"form-control\" type=\"number\" name=\"phoneNumber\" placeholder=\"phone number\" ngModel required>\n      <button [disabled]=\"!f.valid\" class=\"btn btn-success my-3\" type=\"submit\">Add</button>\n    </form>\n  </div>\n  <app-customerItem *ngFor=\"let customer of customers | async\" [customer]=\"customer\"></app-customerItem>\n</div>\n<router-outlet></router-outlet>","import { Component, Input, OnInit } from '@angular/core';\nimport { Vehicle } from '../Vehicle';\nimport * as fromApp from '../../app.reducer';\nimport * as fromVehicleActions from '../store/vehicle.actions';\nimport { Store } from '@ngrx/store';\n\n@Component({\n  selector: 'app-vehicleitem',\n  templateUrl: './vehicleitem.component.html',\n  styleUrls: ['./vehicleitem.component.scss']\n})\nexport class VehicleitemComponent implements OnInit {\n  @Input() vehicle:Vehicle;\n  constructor(private store:Store<fromApp.AppState>) { }\n\n  ngOnInit() {\n  }\n\n  deleteCar(id:number) {\n    this.store.dispatch(new fromVehicleActions.DeleteVehicleStart(id));\n  }\n}\n","<div class=\"card\">\n  <span class=\"count\">{{vehicle.count}}-left</span>\n  <div class=\"card-header\">\n    <p>{{vehicle.model}} {{vehicle.brand}}</p>\n  </div>\n  <div class=\"img_text\">\n    <div class=\"card-body\">\n      <img src=\"{{vehicle.picture}}\" alt=\"v_image\">\n    </div>\n    <div class=\"card-body\">\n      <p><span>type</span>: {{vehicle.vType}}</p>\n      <p><span>year</span>: {{vehicle.constructionYear}}</p>\n      <p><span>seats</span>: {{vehicle.numberOfSeats}}</p>\n      <p><span>price</span>: {{vehicle.pricePerDay}}$/day</p>\n      <button [routerLink]=\"['/home',vehicle.vehicleId]\" class=\"btn btn-sm btn-primary\">edit</button>\n      <button (click)=\"deleteCar(vehicle.vehicleId)\" class=\"btn btn-sm btn-danger\">remove</button>\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl:\"http://localhost:5000/user\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { environment } from './../../../environments/environment';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { of } from \"rxjs\";\r\nimport {catchError, map, switchMap} from 'rxjs/operators';\r\nimport { RentalEvent } from \"src/app/rentalEvent/RentalEvent\";\r\nimport * as fromVehicleActions from './vehicle.actions';\r\nimport * as fromApp from '../../app.reducer';\r\n\r\n@Injectable()\r\nexport class VehicleEffects {\r\n   \r\n    getVehicles$ = createEffect(() => {\r\n        return this.actions$.pipe(\r\n            ofType(fromVehicleActions.GET_VEHICLE_START),\r\n            switchMap(() => {\r\n                return this.http.get<any[]>(environment.apiUrl).pipe(map(res => {\r\n                    return new fromVehicleActions.GetVehicleSuccess(res)\r\n                }))\r\n            })\r\n        )\r\n    })\r\n\r\n    createVehicle = createEffect(() => {\r\n        return this.actions$.pipe(\r\n            ofType(fromVehicleActions.CREATE_VEHICLE_START),\r\n            switchMap((resData:fromVehicleActions.CreateVehicleStart) => {\r\n                return this.http.post<any>(environment.apiUrl + \"/createVehicle\",resData.payload).pipe(\r\n                    map(res => {\r\n                        return new fromVehicleActions.CreateVehicleSuccess(res)\r\n                    }),\r\n                    catchError(error => {\r\n                        return of( new fromVehicleActions.CreateVehicleFail(error.error.errors))\r\n                    })\r\n                )\r\n            })\r\n        )\r\n    })\r\n\r\n    editVehicle = createEffect(() => {\r\n        return this.actions$.pipe(\r\n            ofType(fromVehicleActions.EDIT_VEHICLE_START),\r\n            switchMap((resData:fromVehicleActions.EditVehicleStart)=> {\r\n                return this.http.put<any>(environment.apiUrl + \"/vehicle/edit/\" + resData.payload.id, resData.payload.vehicle).pipe(\r\n                    map(res => {\r\n                        return new fromVehicleActions.EditVehicleSuccess(res)\r\n                    })\r\n                )\r\n            })\r\n        )\r\n    })\r\n\r\n    createRental = createEffect(() => {\r\n        return this.actions$.pipe(\r\n            ofType(fromVehicleActions.CREATE_RENTAL_START),\r\n            switchMap((resData:fromVehicleActions.CreateRentalStart)=> {\r\n                return this.http.post<any>(environment.apiUrl + \"/rentalEvent/\" + resData.payload.customerName + \"/\" + resData.payload.vehicleName,resData.payload.rentalEvent).pipe(\r\n                    map(res => {\r\n                        return new fromVehicleActions.CreateRentalSuccess({rent:res,successMsg:\"Success\"})\r\n                    }),        \r\n                    catchError(error => {\r\n                            return of(new fromVehicleActions.CreateRentalFail(error.error));\r\n                    })\r\n                )\r\n\r\n            })\r\n        )\r\n    });\r\n    \r\n    \r\n\r\n\r\n    getRental = createEffect(() => {\r\n        return this.actions$.pipe(\r\n            ofType(fromVehicleActions.GET_RENTAL_START),\r\n            switchMap(() => {\r\n                return this.http.get<RentalEvent[]>(environment.apiUrl + \"/rentalEvent\").pipe(\r\n                    map(res => {\r\n                        return new fromVehicleActions.GetRentalSuccess(res)\r\n                    })\r\n                )\r\n            })\r\n        )\r\n    })\r\n\r\n    deleteRental = createEffect(() => {\r\n        return this.actions$.pipe(\r\n            ofType(fromVehicleActions.DELETE_RENTAL_START),\r\n            switchMap((resData:fromVehicleActions.DeleteRentalStart)=> {\r\n                return this.http.delete<RentalEvent>(environment.apiUrl + \"/rentalEvent/\" + resData.payload).pipe(\r\n                    map(() => {\r\n                        return new fromVehicleActions.DeleteRentalSuccess()\r\n                    })\r\n                )\r\n            })\r\n        )\r\n    })\r\n\r\n    deleteVehicle = createEffect(() => {\r\n        return this.actions$.pipe(\r\n            ofType(fromVehicleActions.DELETE_VEHICLE_START),\r\n            switchMap((resData:fromVehicleActions.DeleteVehicleStart) => {\r\n                return this.http.delete<any>(environment.apiUrl + \"/vehicle/\" + resData.payload).pipe(\r\n                    map(res => {\r\n                        return new fromVehicleActions.DeleteVehicleSuccess()\r\n                    })\r\n                )\r\n            })\r\n        )\r\n    })\r\n\r\n    constructor(private actions$:Actions,private http:HttpClient,private store:Store<fromApp.AppState>){}\r\n   \r\n    \r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'RentACar';\n}\n","<div class=\"container-fluid\">\n  <div class=\"navbar-my\">\n    <a routerLink=\"/home\">HOME</a>\n    <a routerLink=\"/customers\">CUSTOMERS</a>\n    <a routerLink=\"/rented\">RENTED DATA</a>\n  </div>\n  <router-outlet></router-outlet>\n</div>","import { map } from 'rxjs/operators';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport * as fromApp from '../../app.reducer';\nimport * as fromCustomerActions from '../store/customer.actions';\nimport { Customer } from '../Customer';\n\n@Component({\n  selector: 'app-customerEdit',\n  templateUrl: './customerEdit.component.html',\n  styleUrls: ['./customerEdit.component.scss']\n})\nexport class CustomerEditComponent implements OnInit {\n  customerId:number;\n  customer:Customer;\n  constructor(private store:Store<fromApp.AppState>,private router:ActivatedRoute,private route:Router) { }\n\n  ngOnInit() {\n    this.router.params.subscribe(\n      (param:Params) => {\n        this.customerId = +param['id'];\n        this.store.select('customerList').pipe(map(resdata => {\n          return resdata.customer.find((v,index) => {\n            return v.customerId === this.customerId\n          })\n        })).subscribe(res => {\n          if(!res){\n            this.route.navigate(['/customers'])\n          }\n          this.customer = JSON.parse(JSON.stringify(res));\n        })\n      }\n    )\n  }\n\n  editCustomer(f:NgForm){\n    this.store.dispatch(new fromCustomerActions.EditCustomerStart({id:this.customerId,customer:f.value}))\n  } \n\n}\n","<div *ngIf=\"customer\" class=\"overlay\">\n  <form (ngSubmit)=\"editCustomer(f)\" #f=\"ngForm\">\n    <span routerLink=\"/customers\" >X</span>\n    <p>Edit Customer</p>\n    <label>Full name\n      <input class=\"form-control\" type=\"text\" name=\"fullName\" [(ngModel)]=\"customer.fullName\">\n    </label>\n    <label>Email address\n      <input class=\"form-control\" type=\"text\" name=\"emailAddress\" [(ngModel)]=\"customer.emailAddress\">\n    </label>\n    <label>Phone number\n      <input class=\"form-control\" type=\"number\" name=\"phoneNumber\" [(ngModel)]=\"customer.phoneNumber\">\n    </label>\n    <button type=\"submit\" class=\"btn btn-dark\">Edit</button>\n  </form>\n</div>\n","import { map } from 'rxjs/operators';\nimport * as fromAppReducer from './../app.reducer';\nimport { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport * as fromVehicleActions from './store/vehicle.actions';\nimport * as fromCustomerActions from '../customers/store/customer.actions';\nimport { Vehicle } from './Vehicle';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-vehicles',\n  templateUrl: './vehicles.component.html',\n  styleUrls: ['./vehicles.component.scss']\n})\nexport class VehiclesComponent implements OnInit {\n  vehicles:Vehicle[] = [];\n  vType = [\"economy\",\"luxury\",\"estate\",\"SUV\",\"cargo\"];\n  defaultType = \"economy\";\n  isActive:boolean = false;\n  isRented:boolean = false;\n\n  rentalError:string;\n  constructor(private store:Store<fromAppReducer.AppState>) { }\n\n  ngOnInit() {\n    this.store.dispatch(new fromVehicleActions.GetVehicleStart());\n    this.store.dispatch(new fromCustomerActions.GetCustomerStart());\n    this.store.select('vehicleList').pipe(map(res => res)).subscribe(\n      res => {\n          this.vehicles = res.vehicle\n      }\n    );\n    \n  }\n\n  addNewCar(f:NgForm){\n    this.store.dispatch(new fromVehicleActions.CreateVehicleStart(f.value))\n  }\n\n}\n","<div class=\"vehicles\">\n  <button (click)=\"isRented=!isRented\" class=\"btn btn-success rental_event_btn\">Rent a car</button>\n  <div class=\"vehicles_header\">\n    <h1>Rent A Car</h1>\n    <p>\"Rent it!\"</p>\n    <app-rentalEvent *ngIf=\"isRented\" [vehicles]=\"vehicles\"></app-rentalEvent>\n  </div>\n  <p class=\"rentalError\" *ngIf=\"rentalError\">{{rentalError}}</p>\n  <div class=\"add_btns\">\n    <button (click)=\"isActive = !isActive\" class=\"btn btn-sm btn-success\">+ add new</button>\n    <div *ngIf=\"isActive\" class=\"overlay\">\n      <form (ngSubmit)=\"addNewCar(f)\" #f=\"ngForm\">\n        <span (click)=\"isActive=false\" >X</span>\n        <p>Create Form</p>\n        <input class=\"form-control\" #brand=\"ngModel\" type=\"text\" name=\"brand\" placeholder=\"car brand\" ngModel required>\n        <legend *ngIf=\"!brand.valid\">*Required</legend>\n        <input class=\"form-control\" #constructionYear=\"ngModel\" type=\"text\" name=\"constructionYear\" placeholder=\"year of construction\" ngModel required>\n        <legend *ngIf=\"!constructionYear.valid\">*Required</legend>\n        <input class=\"form-control\" #model=\"ngModel\" type=\"text\" name=\"model\" placeholder=\"model\" ngModel required>\n        <legend *ngIf=\"!model.valid\">*Required</legend>\n        <select class=\"form-control\" name=\"vType\" [(ngModel)]=\"defaultType\" required>\n          <option *ngFor=\"let vTp of vType\" [value]=\"vTp\">{{vTp}}</option>\n        </select>\n        <input class=\"form-control\" #picture=\"ngModel\" type=\"text\" name=\"picture\" placeholder=\"picture(..copy url)\" ngModel required>\n        <legend *ngIf=\"!picture.valid\">*Required</legend>\n        <input class=\"form-control\" #count=\"ngModel\" type=\"number\" name=\"count\" placeholder=\"how in storage?\" ngModel required>\n        <legend *ngIf=\"!count.valid\">*1 number is req</legend>\n        <input class=\"form-control\" #numberOfSeats=\"ngModel\" type=\"number\" name=\"numberOfSeats\" placeholder=\"number of seats\" ngModel required>\n        <legend *ngIf=\"!numberOfSeats.valid\">*1 number is req</legend>\n        <input class=\"form-control\" #pricePerDay=\"ngModel\" type=\"number\" name=\"pricePerDay\" placeholder=\"Price/Day\" ngModel required>\n        <legend *ngIf=\"!pricePerDay.valid\">*1 number is req</legend>\n        <button [disabled]=\"!f.valid\" type=\"submit\" class=\"btn btn-dark\">Add</button>\n      </form>\n    </div>\n  </div>\n  <div class=\"vehicle\">\n    <app-vehicleitem *ngFor=\"let vehicle of vehicles\" [vehicle]=\"vehicle\"></app-vehicleitem>\n  </div>\n  <div class=\"vehicle-edit\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { CustomerEffects } from './customers/store/customer.effects';\nimport { CustomerItemComponent } from './customers/customerItem/customerItem.component';\nimport { CustomerEditComponent } from './customers/customerEdit/customerEdit.component';\nimport { VehicleEditComponent } from './vehicles/vehicleEdit/vehicleEdit.component';\nimport { VehicleitemComponent } from './vehicles/vehicleitem/vehicleitem.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { CustomersComponent } from './customers/customers.component';\nimport { VehiclesComponent } from './vehicles/vehicles.component';\nimport { RentalEventComponent } from './rentalEvent/rentalEvent.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { StoreModule } from '@ngrx/store';\nimport { appreducers } from './app.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { VehicleEffects } from './vehicles/store/vehicle.effects';\nimport { FormsModule } from '@angular/forms';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RenteddataComponent } from './renteddata/renteddata.component';\n\nconst routes:Routes = [\n  {path:\"\",redirectTo:\"/home\",pathMatch:'full'},\n  {path:\"customers\",component:CustomersComponent,children:[\n    {path:\"edit/:id\",component:CustomerEditComponent}\n  ]},\n  {path:\"home\", component:VehiclesComponent, children:[\n    {path:\":id\", component:VehicleEditComponent}\n  ]},\n  {path:\"rented\", component:RenteddataComponent}\n]\n\n@NgModule({\n  declarations: [\t\t\t\t\n    AppComponent,\n      CustomersComponent,\n      VehiclesComponent,\n      RentalEventComponent,\n      VehicleitemComponent,\n      VehicleEditComponent,\n      CustomerEditComponent,\n      CustomerItemComponent,\n      RenteddataComponent\n   ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' }),\n    StoreModule.forRoot(appreducers),\n    EffectsModule.forRoot([VehicleEffects,CustomerEffects]),\n    BsDatepickerModule.forRoot(),\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { ActionReducerMap, createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport * as fromVehicleReducer from \"./vehicles/store/vehicle.reducer\";\r\nimport * as fromCustomerReducer from './customers/store/customer.reducer';\r\n\r\nexport interface AppState {\r\n    vehicleList: fromVehicleReducer.VehicleState,\r\n    customerList: fromCustomerReducer.CustomerState\r\n}\r\n\r\nexport const appreducers:ActionReducerMap<AppState> = {\r\n    vehicleList: fromVehicleReducer.VehicleReducer,\r\n    customerList: fromCustomerReducer.CustomerReducer\r\n}\r\n\r\n\r\nexport const customerState = createFeatureSelector<fromCustomerReducer.CustomerState>('customerList');\r\nexport const vehicleState = createFeatureSelector<fromVehicleReducer.VehicleState>('vehicleList');\r\nexport const getCustomers = createSelector(customerState,fromCustomerReducer.getCustomerState);\r\nexport const getVehicle = createSelector(vehicleState,fromVehicleReducer.getVehicles);\r\nexport const getMsgForRentalSuccess = createSelector(vehicleState,fromVehicleReducer.getloading);\r\nexport const getRentalError = createSelector(vehicleState,fromVehicleReducer.getError);\r\n","import { RentalEvent } from 'src/app/rentalEvent/RentalEvent';\r\nimport { Vehicle } from '../Vehicle';\r\nimport * as fromActions from './vehicle.actions';\r\n\r\nexport interface VehicleState{\r\n    vehicle:Vehicle[],\r\n    rental:any[],\r\n    createUserFail:string[],\r\n    rentalSuccess:string,\r\n    rentalError:string,\r\n    loading:boolean\r\n}\r\n\r\nconst initialState:VehicleState = {\r\n    vehicle: [],\r\n    rental:[],\r\n    createUserFail:[],\r\n    rentalSuccess:null,\r\n    rentalError:null,\r\n    loading:false\r\n}\r\n\r\nexport function VehicleReducer(state=initialState,action:fromActions.VehicleTypes) {\r\n    switch(action.type){\r\n        case fromActions.GET_VEHICLE_START:\r\n            return {\r\n                ...state\r\n            }\r\n        case fromActions.GET_VEHICLE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                vehicle:action.payload\r\n            }\r\n        case fromActions.CREATE_VEHICLE_START:\r\n            return {\r\n                ...state,\r\n            }\r\n        case fromActions.CREATE_VEHICLE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                vehicle:[...state.vehicle,action.payload],\r\n                createUserFail:[]\r\n            }\r\n        case fromActions.CREATE_VEHICLE_FAIL:\r\n            return {\r\n                ...state,\r\n                createUserFail:action.payload\r\n            }\r\n        case fromActions.EDIT_VEHICLE_START:\r\n            return {\r\n                ...state\r\n            }\r\n        \r\n        case fromActions.EDIT_VEHICLE_SUCCESS:\r\n            let index = state.vehicle.findIndex(i => i.vehicleId === action.payload.vehicleId);\r\n            \r\n            let vehicle = [...state.vehicle];\r\n\r\n            const vehicleUpdate = {\r\n                ...action.payload\r\n            }\r\n            \r\n            vehicle[index] = vehicleUpdate;\r\n\r\n\r\n            return {\r\n                ...state,\r\n                vehicle:vehicle,\r\n            }\r\n\r\n        case fromActions.DELETE_VEHICLE_START:\r\n            return {\r\n                ...state,\r\n                vehicle:state.vehicle.filter((v,index) => {\r\n                    return v.vehicleId !== action.payload\r\n                })\r\n            }\r\n        case fromActions.DELETE_VEHICLE_SUCCESS:\r\n            return {\r\n                ...state\r\n            }\r\n\r\n        case fromActions.CREATE_RENTAL_START:\r\n            return {\r\n                ...state,\r\n                rentalError:null,\r\n                loading:true,\r\n                rentalSuccess:null\r\n            }\r\n        case fromActions.CREATE_RENTAL_SUCCESS:\r\n            \r\n            let id = state.vehicle.findIndex(v => v.vehicleId === action.payload.rent.vehiclerepo.vehicleId);\r\n\r\n            let v = [...state.vehicle];\r\n\r\n            let vupdate = {\r\n                ...action.payload.rent.vehiclerepo\r\n            };\r\n\r\n            v[id] = vupdate;\r\n\r\n            return {\r\n                ...state,\r\n                rentalSuccess:action.payload.successMsg,\r\n                rentalError:null,\r\n                rental:[...state.rental,action.payload],\r\n                vehicle:v,\r\n                loading:false,\r\n                \r\n            }\r\n        case fromActions.CREATE_RENTAL_FAIL:\r\n            return {\r\n                ...state,\r\n                loading:false,\r\n                rentalError:action.payload,\r\n                rentalSuccess:null,\r\n                rental:[]\r\n            }\r\n        case fromActions.GET_RENTAL_START:\r\n            return {\r\n                ...state\r\n            }\r\n        case fromActions.GET_RENTAL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                rental:action.payload\r\n            }\r\n        case fromActions.DELETE_RENTAL_START:\r\n            return {\r\n                ...state,\r\n                rental:state.rental.filter(v => {\r\n                    return v.rentalId !== action.payload\r\n                })\r\n            }\r\n        case fromActions.DELETE_RENTAL_SUCCESS:\r\n            return {\r\n                ...state\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const getVehicles = (state:VehicleState) => state.vehicle;\r\nexport const getloading = (state:VehicleState) => state.loading;\r\nexport const getError = (state:VehicleState) => state.rentalError;","import { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Vehicle } from '../Vehicle';\nimport * as fromApp from '../../app.reducer';\nimport * as fromVehicleActions from '../store/vehicle.actions';\n\n@Component({\n  selector: 'app-vehicleEdit',\n  templateUrl: './vehicleEdit.component.html',\n  styleUrls: ['./vehicleEdit.component.scss']\n})\nexport class VehicleEditComponent implements OnInit {\n  vType = [\"economy\",\"luxury\",\"estate\",\"SUV\",\"cargo\"];\n  defaultType = \"economy\";\n  vehicleId:number;\n  vehicle:Vehicle;\n  constructor(private route:ActivatedRoute,private router:Router,private store:Store<fromApp.AppState>) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(\n      (param:Params) => {\n        this.vehicleId = +param['id'];\n         this.store.select('vehicleList').pipe(map(resdata => {\n           return resdata.vehicle.find((v,index) => {\n             return v.vehicleId === this.vehicleId\n           })\n         })).subscribe(res => {\n          if(!res){\n            this.router.navigate(['/'])\n          }\n          this.vehicle = res\n         })\n      }\n    )\n  }\n\n  editCar(f:NgForm){\n      this.store.dispatch(new fromVehicleActions.EditVehicleStart({id:this.vehicleId,vehicle:f.value}));\n  }\n\n}\n","<div class=\"overlay\">\n  <form *ngIf=\"vehicle\" (ngSubmit)=\"editCar(f)\" #f=\"ngForm\">\n    <span routerLink=\"/\">X</span>\n    <label>Car Brand\n      <input class=\"form-control\" type=\"text\" name=\"brand\" placeholder=\"car brand\" [(ngModel)]=\"vehicle.brand\" required>\n    </label>\n    <label>Construction year\n      <input class=\"form-control\" type=\"text\" name=\"constructionYear\" placeholder=\"year of construction\" [(ngModel)]=\"vehicle.constructionYear\" required>\n    </label>\n    <label>Vehicle Model\n      <input class=\"form-control\" type=\"text\" name=\"model\" placeholder=\"model\" [(ngModel)]=\"vehicle.model\" required>\n    </label>\n    <label>Vehicle Type\n      <select class=\"form-control\" name=\"vType\" [(ngModel)]=\"defaultType\">\n        <option *ngFor=\"let vTp of vType\" [value]=\"vTp\">{{vTp}}</option>\n      </select>\n    </label>\n    <label>Vehicle URL\n      <input class=\"form-control\" type=\"text\" name=\"picture\" placeholder=\"picture(..copy url)\" [(ngModel)]=\"vehicle.picture\" required>\n    </label>\n    <label>Vehicles in a store\n      <input class=\"form-control\" type=\"number\" name=\"count\" placeholder=\"count\" [(ngModel)]=\"vehicle.count\" required>\n    </label>\n    <label>Vehicle seats\n      <input class=\"form-control\" type=\"number\" name=\"numberOfSeats\" placeholder=\"number of seats\" [(ngModel)]=\"vehicle.numberOfSeats\" required>\n    </label>\n   <label>Vehicle price/day\n    <input class=\"form-control\" type=\"number\" name=\"pricePerDay\" placeholder=\"Price/Day\" [(ngModel)]=\"vehicle.pricePerDay\" required>\n   </label>\n    <button [disabled]=\"!f.valid\" type=\"submit\" class=\"btn btn-dark\">Update</button>\n  </form>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Customer } from '../Customer';\nimport * as fromCustomerActions from '../store/customer.actions';\nimport * as fromApp from '../../app.reducer';\nimport { Store } from '@ngrx/store';\n\n@Component({\n  selector: 'app-customerItem',\n  templateUrl: './customerItem.component.html',\n  styleUrls: ['./customerItem.component.scss']\n})\nexport class CustomerItemComponent implements OnInit {\n  @Input() customer:Customer;\n  constructor(private store:Store<fromApp.AppState>) { }\n\n  ngOnInit() {\n  }\n  \n  deleteCustomer(id:number) {\n    if(confirm(\"Are you sure?\")){\n      this.store.dispatch(new fromCustomerActions.DeleteCustomerStart(id));\n    }\n  }\n}\n","<div class=\"card\">\n  <div class=\"card-body\">\n    <h4>{{customer.fullName}} <span *ngIf=\"customer.vip==='Yes'\">Vip</span></h4>\n    <p><span>email:</span> {{customer.emailAddress}}</p>\n    <p><span>phone:</span> {{customer.phoneNumber}}</p>\n    <button [routerLink]=\"['edit',customer.customerId]\" class=\"btn btn-sm btn-dark\">edit</button>\n    <button (click)=\"deleteCustomer(customer.customerId)\" class=\"btn btn-sm btn-dark mx-2\">x</button>\n  </div>\n</div>","import { ofType } from '@ngrx/effects';\nimport { HttpClient } from '@angular/common/http';\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport * as fromApp from '../app.reducer';\nimport * as fromVehicleActions from '../vehicles/store/vehicle.actions';\nimport { Customer } from '../customers/Customer';\nimport { Vehicle } from '../vehicles/Vehicle';\nimport { Actions } from '@ngrx/effects';\n\n@Component({\n  selector: 'app-rentalEvent',\n  templateUrl: './rentalEvent.component.html',\n  styleUrls: ['./rentalEvent.component.scss']\n})\nexport class RentalEventComponent implements OnInit,OnDestroy {\n  customers:Customer[];\n @Input() vehicles:Vehicle[];\n  defaultValue = \"Z4\"\n  loading:boolean;\n  rentalSuccessMSg:string = '';\n  rentedError:string = '';\n\n  constructor(private store:Store<fromApp.AppState>,private http:HttpClient,private actions$:Actions) {}\n\n  ngOnInit() {\n    console.log(this.rentalSuccessMSg)\n    this.store.select('customerList').subscribe(\n      res => this.customers = res.customer\n    )\n\n    this.store.select(fromApp.getMsgForRentalSuccess).subscribe(res => {\n      this.loading = res\n    });\n\n    this.actions$.pipe(\n      ofType('[Rental] Create rental fail')\n    ).subscribe((action:any) => {\n      console.log(action)\n      this.rentedError = action.payload;\n      setTimeout(() => {\n        this.rentedError = ''\n      }, 2000);\n    })\n\n    this.actions$.pipe(\n      ofType('[Rental] Create rental success')\n    ).subscribe((res:any) => {\n     this.rentalSuccessMSg = res.payload.successMsg\n     setTimeout(() => {\n        this.rentalSuccessMSg = ''\n     }, 2000);\n    })\n  }\n\n\n  rentIt(f:NgForm){\n    this.store.dispatch(new fromVehicleActions.CreateRentalStart({customerName:f.value.customerName,vehicleName:f.value.vehicleName,rentalEvent:f.value}));\n    setTimeout(() => {\n      f.reset()\n    }, 700);\n  }\n\n  ngOnDestroy(){\n     \n  }\n  \n}\n","<p *ngIf=\"loading\" class=\"loading bg-success text-center text-white\">...</p>\n<p *ngIf=\"rentedError\" class=\"rentalError text-white bg-danger text-center p-3\">{{rentedError}}</p>\n<p *ngIf=\"rentalSuccessMSg\" class=\"rentalSuccess text-white bg-success text-center p-3\">{{rentalSuccessMSg}}</p>\n<form (ngSubmit)=\"rentIt(f)\" #f=\"ngForm\">\n  <div class=\"form-row\">\n   <div class=\"form-group col-md-6\">\n    <label>Start\n      <input class=\"form-control\" #startDate=\"ngModel\" type=\"date\" name=\"startDate\" ngModel required >\n      <p class=\"text-danger\" *ngIf=\"!startDate.valid && startDate.touched\">*Required</p>\n    </label>\n   </div>\n    <div class=\"form-group col-md-6\">\n      <label>End\n        <input class=\"form-control\" #endDate=\"ngModel\" type=\"date\" name=\"endDate\" ngModel required >\n        <p class=\"text-danger\" *ngIf=\"!endDate.valid && endDate.touched\">*Required</p>\n      </label>\n    </div>\n  </div>\n  <label>Customers:</label>\n  <select class=\"form-control\" #customerName=\"ngModel\" name=\"customerName\" ngModel required>\n    <option *ngFor=\"let cust of customers\" [value]=\"cust.fullName\">{{cust.fullName}}</option>\n  </select>\n  <p class=\"text-danger\" *ngIf=\"!customerName.valid && customerName.touched\">*Required</p>\n  <label>Vehicle:</label>\n  <select class=\"form-control\" #vehicleName=\"ngModel\" name=\"vehicleName\" ngModel required>\n    <option *ngFor=\"let veh of vehicles\" [value]=\"veh.model\">{{veh.model}} {{veh.brand}}</option>\n  </select>\n  <p class=\"text-danger\" *ngIf=\"!vehicleName.valid && vehicleName.touched\">*Required</p>\n  <button [disabled]=\"!f.valid\"  class=\"btn btn-dark my-2\" type=\"submit\">Add</button>\n</form>\n","import { Action } from '@ngrx/store';\r\nimport { RentalEvent } from 'src/app/rentalEvent/RentalEvent';\r\nimport { Vehicle } from '../Vehicle';\r\n\r\nexport const GET_VEHICLE_START = 'GET_VEHICLE_START';\r\nexport const GET_VEHICLE_SUCCESS = 'GET_VEHICLE_SUCCESS';\r\n\r\nexport const CREATE_VEHICLE_START = 'CREATE_VEHICLE_START';\r\nexport const CREATE_VEHICLE_SUCCESS = 'CREATE_VEHICLE_SUCCESS';\r\nexport const CREATE_VEHICLE_FAIL = 'CREATE_VEHICLE_FAIL';\r\n\r\nexport const EDIT_VEHICLE_START = 'EDIT_VEHICLE_START';\r\nexport const EDIT_VEHICLE_SUCCESS = 'EDIT_VEHICLE_SUCCESS';\r\n\r\nexport const DELETE_VEHICLE_START = 'DELETE_VEHICLE_START';\r\nexport const DELETE_VEHICLE_SUCCESS = 'DELETE_VEHICLE_SUCCESS';\r\n\r\nexport const CREATE_RENTAL_START = '[Rental] Create rental start';\r\nexport const CREATE_RENTAL_SUCCESS = '[Rental] Create rental success';\r\nexport const CREATE_RENTAL_FAIL = '[Rental] Create rental fail';\r\n\r\n\r\nexport const GET_RENTAL_START = 'GET_RENTAL_START';\r\nexport const GET_RENTAL_SUCCESS = 'GET_RENTAL_SUCCESS';\r\n\r\nexport const DELETE_RENTAL_START = 'DELETE_RENTAL_START';\r\nexport const DELETE_RENTAL_SUCCESS = 'DELETE_RENTAL_SUCCESS';\r\n\r\n\r\nexport class GetVehicleStart implements Action {\r\n  readonly type = GET_VEHICLE_START;\r\n}\r\n\r\nexport class GetVehicleSuccess implements Action {\r\n  readonly type = GET_VEHICLE_SUCCESS;\r\n\r\n  constructor(public payload: Vehicle[]) {}\r\n}\r\n\r\nexport class CreateVehicleStart implements Action {\r\n  readonly type = CREATE_VEHICLE_START;\r\n\r\n  constructor(public payload: Vehicle) {}\r\n}\r\n\r\nexport class CreateVehicleSuccess implements Action {\r\n  readonly type = CREATE_VEHICLE_SUCCESS;\r\n  constructor(public payload: Vehicle) {}\r\n}\r\n\r\n//fail to create vehicle\r\nexport class CreateVehicleFail implements Action {\r\n  readonly type = CREATE_VEHICLE_FAIL;\r\n  constructor(public payload: string[]) {}\r\n}\r\n\r\nexport class EditVehicleStart implements Action {\r\n  readonly type = EDIT_VEHICLE_START;\r\n\r\n  constructor(public payload: { id: number; vehicle: Vehicle }) {}\r\n}\r\nexport class EditVehicleSuccess implements Action {\r\n  readonly type = EDIT_VEHICLE_SUCCESS;\r\n\r\n  constructor(public payload: Vehicle) {}\r\n}\r\n\r\nexport class DeleteVehicleStart implements Action {\r\n  readonly type = DELETE_VEHICLE_START;\r\n  constructor(public payload: number) {}\r\n}\r\nexport class DeleteVehicleSuccess implements Action {\r\n  readonly type = DELETE_VEHICLE_SUCCESS;\r\n}\r\n\r\nexport class CreateRentalStart implements Action {\r\n  readonly type = CREATE_RENTAL_START;\r\n\r\n  constructor(\r\n    public payload: { customerName:string; vehicleName: string; rentalEvent: RentalEvent }\r\n  ) {}\r\n}\r\n\r\nexport class CreateRentalSuccess implements Action {\r\n  readonly type = CREATE_RENTAL_SUCCESS;\r\n\r\n  constructor(public payload:{rent:any,successMsg:string}) {}\r\n}\r\nexport class CreateRentalFail implements Action {\r\n  readonly type = CREATE_RENTAL_FAIL;\r\n  constructor(public payload:string) {}\r\n}\r\n\r\nexport class GetRentalStart implements Action {\r\n  readonly type = GET_RENTAL_START;\r\n}\r\nexport class GetRentalSuccess implements Action {\r\n  readonly type = GET_RENTAL_SUCCESS;\r\n\r\n  constructor(public payload:RentalEvent[]){}\r\n}\r\nexport class DeleteRentalStart implements Action {\r\n  readonly type = DELETE_RENTAL_START;\r\n  constructor(public payload:number) {}\r\n}\r\nexport class DeleteRentalSuccess implements Action {\r\n  readonly type = DELETE_RENTAL_SUCCESS;\r\n\r\n}\r\n\r\nexport type VehicleTypes =\r\n  | GetVehicleStart\r\n  | GetVehicleSuccess\r\n  | CreateVehicleStart\r\n  | CreateVehicleSuccess\r\n  | EditVehicleStart\r\n  | EditVehicleSuccess\r\n  | DeleteVehicleStart\r\n  | DeleteVehicleSuccess\r\n  | CreateVehicleFail\r\n  | CreateRentalStart\r\n  | CreateRentalSuccess | GetRentalStart | GetRentalSuccess | CreateRentalFail | DeleteRentalStart | DeleteRentalSuccess;\r\n","import { ofType } from '@ngrx/effects';\nimport { map } from 'rxjs/operators';\nimport { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport * as fromApp from '../app.reducer';\nimport * as fromVehicleActions from '../vehicles/store/vehicle.actions';\nimport { RentalEvent } from '../rentalEvent/RentalEvent';\nimport { Actions } from '@ngrx/effects';\n\n@Component({\n  selector: 'app-renteddata',\n  templateUrl: './renteddata.component.html',\n  styleUrls: ['./renteddata.component.scss'],\n})\nexport class RenteddataComponent implements OnInit {\n  rented:RentalEvent[];\n  constructor(private store: Store<fromApp.AppState>) {\n   \n  }\n\n  ngOnInit() {\n    this.store.dispatch(new fromVehicleActions.GetRentalStart());\n    this.store\n      .select('vehicleList')\n      .pipe(map((data) => data.rental))\n      .subscribe((res) => {\n        this.rented = res\n      });\n  }\n\n  deleteRental(id:number){\n      this.store.dispatch(new fromVehicleActions.DeleteRentalStart(id));\n  }\n}\n","<div class=\"rented\">\n  <p *ngIf=\"rented.length === 0\" class=\"msg_no_files\">No files.. X(</p>\n  <div class=\"card\" *ngFor=\"let rent of rented\">\n    <p (click)=\"deleteRental(rent.rentalId)\" class=\"close\">X</p>\n    <div class=\"card-body\">\n      <p>{{rent.startDate | date}} - {{rent.endDate | date}}</p>\n    </div>\n    <div class=\"card-body\">\n      <span>CUSTOMER</span>\n      <p class=\"customername\"> {{rent.customerName}}</p>\n      <span>VEHICLE MODEL</span>\n      <p class=\"vehiclename\"> {{rent.vehicleName}}</p>\n    </div>\n  </div>\n</div>\n","import { environment } from './../../../environments/environment';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\nimport {map, switchMap} from 'rxjs/operators';\r\nimport { Customer } from \"../Customer\";\r\nimport * as fromActions from './customer.actions';\r\n\r\n\r\n@Injectable()\r\nexport class CustomerEffects {\r\n    getCustomers$ = createEffect(() => {\r\n        return this.action$.pipe(\r\n            ofType(fromActions.GET_CUSTOMERS_START),\r\n            switchMap(()=> {\r\n                return this.http.get<Customer[]>(environment.apiUrl + \"/customers\").pipe(\r\n                    map(res => {\r\n                        return new fromActions.GetCustomerSuccess(res)\r\n                    })\r\n                )\r\n            })\r\n        )\r\n    })\r\n\r\n    createCustomer$ = createEffect(() => {\r\n        return this.action$.pipe(\r\n            ofType(fromActions.CREATE_CUSTOMERS_START),\r\n            switchMap((resData:fromActions.CreateCustomerStart) => {\r\n                return this.http.post<Customer>(environment.apiUrl + \"/createCustomer\",resData.payload).pipe(\r\n                    map(res => {\r\n                        return new fromActions.CreateCustomerSuccess(res)\r\n                    })\r\n                )\r\n            })\r\n        )\r\n    })\r\n\r\n    editCustomer$ = createEffect(() => {\r\n        return this.action$.pipe(\r\n            ofType(fromActions.EDIT_CUSTOMERS_START),\r\n            switchMap((resdata:fromActions.EditCustomerStart) => {\r\n                return this.http.put<Customer>(environment.apiUrl + \"/customer/edit/\" + resdata.payload.id,resdata.payload.customer).pipe(\r\n                    map(res => {\r\n                        return new fromActions.EditCustomerSuccess(res)\r\n                    })\r\n                )\r\n            })\r\n        )\r\n    })\r\n\r\n    deleteCustomer$ = createEffect(() => {\r\n        return this.action$.pipe(\r\n            ofType(fromActions.DELETE_CUSTOMERS_START),\r\n            switchMap((resdata:fromActions.DeleteCustomerStart) => {\r\n                return this.http.delete<Customer>(environment.apiUrl + \"/customer/\" + resdata.payload).pipe(\r\n                    map(res => {\r\n                        return new fromActions.DeleteCustomerSuccess()\r\n                    })\r\n                )\r\n            })\r\n        )\r\n    })\r\n\r\n    constructor(private action$:Actions,private http:HttpClient) {}\r\n}","import { Customer } from '../Customer';\r\nimport * as fromActions from './customer.actions';\r\n\r\nexport interface CustomerState {\r\n  customer: Customer[];\r\n}\r\n\r\nconst initialState: CustomerState = {\r\n  customer: [],\r\n};\r\n\r\nexport function CustomerReducer(\r\n  state = initialState,\r\n  action: fromActions.CustomersTypes\r\n) {\r\n  switch (action.type) {\r\n    case fromActions.GET_CUSTOMERS_START:\r\n      return {\r\n        ...state,\r\n      };\r\n    case fromActions.GET_CUSTOMERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        customer: action.payload,\r\n      };\r\n    case fromActions.CREATE_CUSTOMERS_START:\r\n      return {\r\n        ...state\r\n      };\r\n    case fromActions.CREATE_CUSTOMERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        customer: [...state.customer, action.payload],\r\n      };\r\n    case fromActions.EDIT_CUSTOMERS_START:\r\n        return{\r\n            ...state\r\n        }\r\n    case fromActions.EDIT_CUSTOMERS_SUCCESS:\r\n        let id = state.customer.findIndex(v => {\r\n            return v.customerId === action.payload.customerId\r\n        });\r\n        let customerUpdate = [...state.customer];\r\n\r\n        let customer = {\r\n            ...action.payload\r\n        }\r\n\r\n        customerUpdate[id] = customer;\r\n\r\n        return {\r\n            ...state,\r\n            customer:customerUpdate\r\n        }\r\n    case fromActions.DELETE_CUSTOMERS_START:\r\n      return {\r\n        ...state,\r\n        customer:state.customer.filter(v => {\r\n          return v.customerId !== action.payload\r\n        })\r\n      }\r\n    case fromActions.DELETE_CUSTOMERS_SUCCESS:\r\n      return {\r\n        ...state\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getCustomerState = (state: CustomerState) => state.customer;\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}